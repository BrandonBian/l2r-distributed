apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: l2r-sequential
  labels:
    tier: worker-set
spec:
  # 2 to start, then for phortx 30-40 is the upper bound probably
  replicas: 1
  selector:
    matchLabels:
      tier: worker-set
  template:
    metadata:
      labels:
        tier: worker-set
    spec:
      # nodeSelector:
      #   # we don't specify the cluster, maybe it's ok to just delete the phortx stuff?
      #   # 1-3
      #   nodetype: 1
      containers:
        - name: worker-container
          tty: true
          stdin: true
          resources: # Maybe a good idea to have the learner on its own gpu, specify like below
            limits:
              nvidia.com/gpu: 1
          env:
            # This is the tricky bit, We're not claiming the pods, we might end up sharing it
            # not-yet done bit: multiple worker sets for each gpu group in the hardware
            #### Change GPUs if you want more replica sets
            # "{{GPU_ID}}"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "2" # 0-7??
            - name: CUDA_VISIBLE_DEVICES
              value: "0" # has to match the above
          image: docker.pdl.cmu.edu/jingyua4/safepo:v1
          command:
            - /bin/bash
            - -c
            - cd / &&
              sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A4B469963BF863CC &&
              sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A4B469963BF863CC &&
              sudo apt-get update &&
              sudo apt-get install -y python3.8 python3.8-dev python3.8-distutils python3.8-venv &&
              wget https://bootstrap.pypa.io/get-pip.py &&
              sudo python3.8 get-pip.py &&
              apt install -y git &&
              git clone https://github.com/BrandonBian/l2r-distributed.git &&
              cd l2r-distributed &&
              git checkout l2r-sequential &&
              pip install git+https://github.com/learn-to-race/l2r@aicrowd-environment &&
              pip install -r setup/devtools_reqs.txt &&
              pip install "opencv-python-headless<4.3" protobuf==3.20.* &&
              cd /home/LinuxNoEditor/ &&
              sudo -u ubuntu ./ArrivalSim.sh -OpenGL

# Notes: after creating the pod, the Arrivial Simulator will be launched, and for L2R agents, you need to manually enter the pod
#        and run the following commands to start the python script:
#        - export AGENT=l2r
#        - cd /l2r-distributed
#        - python3 -m scripts.main
---
apiVersion: v1
kind: Service
metadata:
  name: l2r-sequential-service
spec:
  selector:
    app.kubernetes.io/name: proxy
  ports:
    - name: learner-service-port
      protocol: TCP
      port: 4444
      targetPort: learner-port
